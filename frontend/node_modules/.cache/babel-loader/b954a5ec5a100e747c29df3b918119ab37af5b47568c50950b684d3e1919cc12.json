{"ast":null,"code":"var _jsxFileName = \"/Users/martinvillalba/code/meli/challenge/src/NoteContext/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNotesAPI } from \"./useNotesAPI\";\nimport { useState } from \"react\";\nimport { API_URL } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteContext = /*#__PURE__*/React.createContext();\nfunction NoteProvider(props) {\n  _s();\n  const {\n    item: notes,\n    saveItem: saveNotes,\n    loading,\n    error,\n    deleteNotes\n  } = useNotesAPI([]);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedNotes = notes.filter(note => !!note.completed).length;\n  const totalNotes = notes.length;\n  let searchedNotes = [];\n  if (!searchValue.length >= 1) {\n    searchedNotes = notes;\n  } else {\n    searchedNotes = notes.filter(note => {\n      const noteText = note.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return noteText.includes(searchText);\n    });\n  }\n  const completeNotes = text => {\n    const noteIndex = notes.findIndex(note => note.text === text);\n    const newNotes = [...notes];\n    newNotes[noteIndex].completed = !newNotes[noteIndex].completed;\n    saveNotes(newNotes);\n  };\n  const addNotes = text => {\n    // if (!text.trim()) {\n    //   alert(\"La nota está vacía, escribe algo\");\n    //   return;\n    // }\n    // const newNotes = [...notes];\n    // newNotes.push({\n    //   completed: false,\n    //   text,\n    // });\n    // saveNotes(newNotes);\n    const newNotes = [...notes];\n    fetch('https://baconipsum.com/api/?type=meat-and-filler').then(response => response.json()).then(data => {\n      console.log(`2 ${data}`);\n      newNotes.push({\n        completed: false,\n        text: 'item'\n      });\n      data.forEach(item => newNotes.push({\n        completed: false,\n        text: item\n      }));\n      saveNotes(newNotes);\n    });\n  };\n  const consol = () => {\n    console.log(\"asdaaa\");\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      loading,\n      error,\n      totalNotes,\n      completedNotes,\n      addNotes,\n      searchValue,\n      setSearchValue,\n      searchedNotes,\n      completeNotes,\n      deleteNotes,\n      openModal,\n      setOpenModal,\n      consol\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteProvider, \"4AOaRrGO0p9YO6JnrRzrxPS/mZM=\", false, function () {\n  return [useNotesAPI];\n});\n_c = NoteProvider;\nexport { NoteContext, NoteProvider };\nvar _c;\n$RefreshReg$(_c, \"NoteProvider\");","map":{"version":3,"names":["React","useNotesAPI","useState","API_URL","NoteContext","createContext","NoteProvider","props","item","notes","saveItem","saveNotes","loading","error","deleteNotes","searchValue","setSearchValue","openModal","setOpenModal","completedNotes","filter","note","completed","length","totalNotes","searchedNotes","noteText","text","toLowerCase","searchText","includes","completeNotes","noteIndex","findIndex","newNotes","addNotes","fetch","then","response","json","data","console","log","push","forEach","consol","children"],"sources":["/Users/martinvillalba/code/meli/challenge/src/NoteContext/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNotesAPI } from \"./useNotesAPI\";\nimport { useState } from \"react\";\nimport { API_URL } from \"../constants\"\n\nconst NoteContext = React.createContext();\n\nfunction NoteProvider(props){\n  const {\n    item: notes,\n    saveItem: saveNotes,\n    loading,\n    error,\n    deleteNotes\n  } = useNotesAPI([]);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedNotes = notes.filter(note => !!note.completed).length;\n  const totalNotes = notes.length;\n  let searchedNotes = [];\n\n  if (!searchValue.length >= 1){\n    searchedNotes = notes;\n  } else {\n    searchedNotes = notes.filter(note => {\n      const noteText = note.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return noteText.includes(searchText)\n    })\n  }\n\n  const completeNotes = (text) => {\n    const noteIndex = notes.findIndex(note => note.text === text);\n    const newNotes = [...notes];\n    newNotes[noteIndex].completed = !(newNotes[noteIndex].completed);\n    saveNotes(newNotes);\n  }\n\n  const addNotes = (text) => {\n    // if (!text.trim()) {\n    //   alert(\"La nota está vacía, escribe algo\");\n    //   return;\n    // }\n    // const newNotes = [...notes];\n    // newNotes.push({\n    //   completed: false,\n    //   text,\n    // });\n    // saveNotes(newNotes);\n    const newNotes = [...notes];\n    fetch('https://baconipsum.com/api/?type=meat-and-filler')\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(`2 ${data}`)\n        newNotes.push({completed: false, text: 'item'})\n        data.forEach(item => newNotes.push({completed: false, text: item}))\n        saveNotes(newNotes);\n      });\n  }\n\n  const consol = () => {\n    console.log(\"asdaaa\")\n  }\n\n  return(\n    <NoteContext.Provider value={{\n      loading,\n      error,\n      totalNotes,\n      completedNotes,\n      addNotes,\n      searchValue,\n      setSearchValue,\n      searchedNotes,\n      completeNotes,\n      deleteNotes,\n      openModal,\n      setOpenModal,\n      consol,\n    }}>\n      {props.children}\n    </NoteContext.Provider>\n  )\n}\n\nexport { NoteContext, NoteProvider };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}