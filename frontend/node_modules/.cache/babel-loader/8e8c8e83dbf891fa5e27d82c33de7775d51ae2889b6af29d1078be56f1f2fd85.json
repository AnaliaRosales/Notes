{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from \"react\";\nimport { API_URL } from \"../constants\";\nfunction useNotesAPI(initialValue) {\n  _s();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [notes, setNotes] = useState(initialValue);\n  React.useEffect(() => {\n    fetch(`${API_URL}/notes`).then(response => response.text()).then(response => {\n      try {\n        setNotes(JSON.parse(result)['data']);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    });\n  }, []);\n  const saveNotes = newItem => {\n    try {\n      setNotes(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  const addNotes = (title, description) => {\n    if (!title.trim() || !description.trim()) {\n      alert(\"Title or description is empty\");\n      return;\n    }\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"active\": true,\n      \"title\": title,\n      \"description\": description\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(`${API_URL}/notes`, requestOptions).then(response => response.text()).then(result => {\n      console.log(result);\n      const newNotes = [...notes];\n      newNotes.push(JSON.parse(result)['data']);\n      saveNotes(newNotes);\n    }).catch(error => console.log('error', error));\n  };\n  const updateNotes = (id, title, description) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"title\": title,\n      \"description\": description\n    });\n    var requestOptions = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(`${API_URL}/notes/${id}`, requestOptions).then(response => response.text()).then(result => {\n      const noteIndex = notes.findIndex(note => note.id === id);\n      const newNotes = [...notes];\n      newNotes.splice(noteIndex, 1);\n      newNotes.push(JSON.parse(result)['data']);\n      saveNotes(newNotes);\n    }).catch(error => console.log('error', error));\n  };\n  const updateArchived = (id, archivedValue) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"active\": archivedValue\n    });\n    var requestOptions = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(`${API_URL}/notes/${id}`, requestOptions).then(response => response.text()).then(result => {\n      const noteIndex = notes.findIndex(note => note.id === id);\n      const newNotes = [...notes];\n      newNotes.splice(noteIndex, 1);\n      newNotes.push(JSON.parse(result)['data']);\n      saveNotes(newNotes);\n    }).catch(error => console.log('error', error));\n  };\n  const deleteNotes = id => {\n    var requestOptions = {\n      method: 'DELETE'\n    };\n    fetch(`${API_URL}/notes/${id}`, requestOptions).then(response => response.text()).then(result => {\n      const noteIndex = notes.findIndex(note => note.id === id);\n      const newNotes = [...notes];\n      newNotes.splice(noteIndex, 1);\n      saveNotes(newNotes);\n    }).catch(error => console.log('error', error));\n  };\n  return {\n    notes,\n    saveNotes,\n    loading,\n    error,\n    deleteNotes,\n    addNotes,\n    updateNotes,\n    updateArchived\n  };\n}\n_s(useNotesAPI, \"FoJ9N6MiFeAINvT9mGD/m5kiGJo=\");\nexport { useNotesAPI };","map":{"version":3,"names":["useState","React","API_URL","useNotesAPI","initialValue","error","setError","loading","setLoading","notes","setNotes","useEffect","fetch","then","response","text","JSON","parse","result","saveNotes","newItem","addNotes","title","description","trim","alert","myHeaders","Headers","append","raw","stringify","requestOptions","method","headers","body","redirect","console","log","newNotes","push","catch","updateNotes","id","noteIndex","findIndex","note","splice","updateArchived","archivedValue","deleteNotes"],"sources":["/Users/martinvillalba/code/meli/challenge/src/NoteContext/useNotesAPI.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport React from \"react\";\nimport { API_URL } from \"../constants\"\n\nfunction useNotesAPI(initialValue){\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [notes, setNotes] = useState(initialValue);\n\n  React.useEffect(() => {\n    fetch(`${API_URL}/notes`)\n      .then((response) => response.text())\n      .then((response) => {\n        try {\n          setNotes(JSON.parse(result)['data']);\n          setLoading(false);\n        } catch(error) {\n          setError(error);\n        }\n      });\n  }, []);\n\n  const saveNotes = (newItem) => {\n    try {\n    setNotes(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  };\n\n  const addNotes = (title, description) => {\n    if (!title.trim() || !description.trim()) {\n      alert(\"Title or description is empty\");\n      return;\n    }\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var raw = JSON.stringify({\n      \"active\": true,\n      \"title\": title,\n      \"description\": description\n    });\n\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n\n    fetch(`${API_URL}/notes`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        console.log(result)\n        const newNotes = [...notes];\n        newNotes.push(JSON.parse(result)['data']);\n        saveNotes(newNotes);\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  const updateNotes = (id, title, description) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\n      \"title\": title,\n      \"description\": description\n    });\n    \n    var requestOptions = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(`${API_URL}/notes/${id}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        const noteIndex = notes.findIndex(note => note.id === id);\n        const newNotes = [...notes];\n        newNotes.splice(noteIndex, 1);\n        newNotes.push(JSON.parse(result)['data']);\n        saveNotes(newNotes);\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  const updateArchived = (id, archivedValue) => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    \n    var raw = JSON.stringify({\n      \"active\": archivedValue\n    });\n    \n    var requestOptions = {\n      method: 'PUT',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    \n    fetch(`${API_URL}/notes/${id}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        const noteIndex = notes.findIndex(note => note.id === id);\n        const newNotes = [...notes];\n        newNotes.splice(noteIndex, 1);\n        newNotes.push(JSON.parse(result)['data']);\n        saveNotes(newNotes);\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  const deleteNotes = (id) => {\n    var requestOptions = {\n      method: 'DELETE'\n    };\n    \n    fetch(`${API_URL}/notes/${id}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        const noteIndex = notes.findIndex(note => note.id === id);\n        const newNotes = [...notes];\n        newNotes.splice(noteIndex, 1);\n        saveNotes(newNotes);\n      })\n      .catch(error => console.log('error', error));\n  }\n\n  return {\n    notes,\n    saveNotes,\n    loading,\n    error,\n    deleteNotes,\n    addNotes,\n    updateNotes,\n    updateArchived\n  };\n}\n\nexport { useNotesAPI };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}