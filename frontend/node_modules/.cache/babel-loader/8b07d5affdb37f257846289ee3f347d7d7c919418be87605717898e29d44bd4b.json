{"ast":null,"code":"var _jsxFileName = \"/Users/analiarosales/code/ensolvers/challenge/src/NoteContext/index.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteContext = /*#__PURE__*/React.createContext();\nfunction NoteProvider(props) {\n  _s();\n  const {\n    item: notes,\n    saveItem: saveNotes,\n    loading,\n    error\n  } = useLocalStorage('NOTES_V1', []);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedNotes = notes.filter(note => !!note.completed).length;\n  const totalNotes = notes.length;\n  let searchedNotes = [];\n  if (!searchValue.length >= 1) {\n    searchedNotes = notes;\n  } else {\n    searchedNotes = notes.filter(note => {\n      const noteText = note.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return noteText.includes(searchText);\n    });\n  }\n  const completeNotes = text => {\n    const noteIndex = notes.findIndex(note => note.text === text);\n    const newNotes = [...notes];\n    newNotes[noteIndex].completed = !newNotes[noteIndex].completed;\n    saveNotes(newNotes);\n  };\n  const addNotes = text => {\n    // if (!text.trim()) {\n    //   alert(\"La nota está vacía, escribe algo\");\n    //   return;\n    // }\n    // const newNotes = [...notes];\n    // newNotes.push({\n    //   completed: false,\n    //   text,\n    // });\n    // saveNotes(newNotes);\n    fetch('https://baconipsum.com/api/?type=meat-and-filler').then(response => response.json()).then(data => data.forEach);\n  };\n  const consol = () => {\n    console.log(\"asdaaa\");\n  };\n  const deleteNotes = text => {\n    const noteIndex = notes.findIndex(note => note.text === text);\n    const newNotes = [...notes];\n    newNotes.splice(noteIndex, 1);\n    saveNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      loading,\n      error,\n      totalNotes,\n      completedNotes,\n      addNotes,\n      searchValue,\n      setSearchValue,\n      searchedNotes,\n      completeNotes,\n      deleteNotes,\n      openModal,\n      setOpenModal,\n      consol\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteProvider, \"0y9121i/K8f6bMjqdsUAU8EFyTw=\", false, function () {\n  return [useLocalStorage];\n});\n_c = NoteProvider;\nexport { NoteContext, NoteProvider };\nvar _c;\n$RefreshReg$(_c, \"NoteProvider\");","map":{"version":3,"names":["React","useLocalStorage","useState","NoteContext","createContext","NoteProvider","props","item","notes","saveItem","saveNotes","loading","error","searchValue","setSearchValue","openModal","setOpenModal","completedNotes","filter","note","completed","length","totalNotes","searchedNotes","noteText","text","toLowerCase","searchText","includes","completeNotes","noteIndex","findIndex","newNotes","addNotes","fetch","then","response","json","data","forEach","consol","console","log","deleteNotes","splice","children"],"sources":["/Users/analiarosales/code/ensolvers/challenge/src/NoteContext/index.jsx"],"sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"./useLocalStorage\";\nimport { useState } from \"react\";\n\nconst NoteContext = React.createContext();\n\nfunction NoteProvider(props){\n  const {\n    item: notes,\n    saveItem: saveNotes,\n    loading,\n    error\n  } = useLocalStorage('NOTES_V1', []);\n  const [searchValue, setSearchValue] = React.useState(\"\");\n  const [openModal, setOpenModal] = React.useState(false);\n  const completedNotes = notes.filter(note => !!note.completed).length;\n  const totalNotes = notes.length;\n  let searchedNotes = [];\n\n  if (!searchValue.length >= 1){\n    searchedNotes = notes;\n  } else {\n    searchedNotes = notes.filter(note => {\n      const noteText = note.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return noteText.includes(searchText)\n    })\n  }\n\n  const completeNotes = (text) => {\n    const noteIndex = notes.findIndex(note => note.text === text);\n    const newNotes = [...notes];\n    newNotes[noteIndex].completed = !(newNotes[noteIndex].completed);\n    saveNotes(newNotes);\n  }\n\n  const addNotes = (text) => {\n    // if (!text.trim()) {\n    //   alert(\"La nota está vacía, escribe algo\");\n    //   return;\n    // }\n    // const newNotes = [...notes];\n    // newNotes.push({\n    //   completed: false,\n    //   text,\n    // });\n    // saveNotes(newNotes);\n    fetch('https://baconipsum.com/api/?type=meat-and-filler')\n      .then((response) => response.json())\n      .then((data) => \n        data.forEach\n      );\n  }\n\n  const consol = () => {\n    console.log(\"asdaaa\")\n  }\n  const deleteNotes = (text) => {\n    const noteIndex = notes.findIndex(note => note.text === text);\n    const newNotes = [...notes];\n    newNotes.splice(noteIndex, 1);\n    saveNotes(newNotes);\n  }\n\n  return(\n    <NoteContext.Provider value={{\n      loading,\n      error,\n      totalNotes,\n      completedNotes,\n      addNotes,\n      searchValue,\n      setSearchValue,\n      searchedNotes,\n      completeNotes,\n      deleteNotes,\n      openModal,\n      setOpenModal,\n      consol,\n    }}>\n      {props.children}\n    </NoteContext.Provider>\n  )\n}\n\nexport { NoteContext, NoteProvider };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}